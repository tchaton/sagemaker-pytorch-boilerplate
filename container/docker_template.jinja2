FROM python:3.7-slim

LABEL maintainer="thomas.chaton.ai@gmail.com"

# Avoid warnings by switching to noninteractive
ENV DEBIAN_FRONTEND=noninteractive

RUN apt-get update \
    && apt-get install -y --fix-missing --no-install-recommends\
    ca-certificates nginx wget libffi-dev libssl-dev build-essential libopenblas-dev\
    python3-pip python3-dev python3-venv python3-setuptools\
    git iproute2 procps lsb-release \
    libsm6 libxext6 libxrender-dev \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

RUN python3 -m pip install -U pip \
    && python3 -m pip install poetry \
    && poetry config virtualenvs.create false --local \
    && pip3 install torch==1.6.0+cpu -f https://download.pytorch.org/whl/torch_stable.html \
    && pip3 install setuptools>=41.0.0 \
    && rm -rf /root/.cache

{{ requirements }}
RUN rm -rf /root/.cache

# Set some environment variables. PYTHONUNBUFFERED keeps Python from buffering our standard
# output stream, which means that logs can be delivered to the user quickly. PYTHONDONTWRITEBYTECODE
# keeps Python from writing the .pyc files which are unnecessary in this case. We also update
# PATH so that the train and serve programs are found when the container is invoked.

ENV PYTHONUNBUFFERED=TRUE
ENV PYTHONDONTWRITEBYTECODE=TRUE
ENV PYTHON=$ENV/bin/python
ENV PIP=$ENV/bin/pip
ENV PATH="/opt/program:${PATH}"  

RUN rm -f /usr/bin/python && ln -s /usr/bin/python3 /usr/bin/python

# Set up the program in the image
COPY src /opt/program

ARG MODEL=""
ARG DATASET=""

# Setup location of model for forward inference
RUN sed -i "/model:/c\model: $MODEL" /opt/program/conf/config.yaml
RUN sed -i "/dataset:/c\dataset: $DATASET" /opt/program/conf/config.yaml

WORKDIR /opt/program

